{"paragraphs":[{"title":"Load Yelp Data challenge JSON and register as temporary view","text":"import org.apache.spark.sql.SparkSession\r\n\r\nval warehouseLocation = \"hdfs://192.168.0.50:8020/spark-warehouse\"\r\n\r\nval spark = SparkSession\r\n  .builder()\r\n  .appName(\"Yelp academic dataset example\")\r\n  .config(\"spark.sql.warehouse.dir\", warehouseLocation)\r\n  .getOrCreate()\r\n\r\nspark.sparkContext.setLogLevel(\"ERROR\")\r\n\r\n// Business Data frame\r\nval business = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_business.json\")\r\nbusiness.printSchema\r\n\r\n// Reviews Data frame\r\nval reviews = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_review.json\")\r\nreviews.printSchema\r\n\r\n// Users Data frame\r\nval users = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_user.json\")\r\nusers.printSchema\r\n\r\n// Checkins Data frame\r\nval checkins = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_checkin.json\")\r\ncheckins.printSchema\r\n\r\n// Tips Data frame\r\nval tips = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_tip.json\")\r\ntips.printSchema\r\n\r\nbusiness.createOrReplaceTempView(\"business\")\r\nusers.createOrReplaceTempView(\"user\")\r\nreviews.createOrReplaceTempView(\"review\")\r\ncheckins.createOrReplaceTempView(\"checkin\")\r\ntips.createOrReplaceTempView(\"tip\")\r\n\r\n","dateUpdated":"2016-10-30T11:21:25+0000","config":{"colWidth":12,"title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477825871024_-1326898692","id":"20161030-085204_519339225","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.sql.SparkSession\n\nwarehouseLocation: String = hdfs://192.168.0.50:8020/spark-warehouse\n\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@7ccf236a\n\nbusiness: org.apache.spark.sql.DataFrame = [attributes: struct<Accepts Credit Cards: boolean, Accepts Insurance: boolean ... 34 more fields>, business_id: string ... 13 more fields]\nroot\n |-- attributes: struct (nullable = true)\n |    |-- Accepts Credit Cards: boolean (nullable = true)\n |    |-- Accepts Insurance: boolean (nullable = true)\n |    |-- Ages Allowed: string (nullable = true)\n |    |-- Alcohol: string (nullable = true)\n |    |-- Ambience: struct (nullable = true)\n |    |    |-- casual: boolean (nullable = true)\n |    |    |-- classy: boolean (nullable = true)\n |    |    |-- divey: boolean (nullable = true)\n |    |    |-- hipster: boolean (nullable = true)\n |    |    |-- intimate: boolean (nullable = true)\n |    |    |-- romantic: boolean (nullable = true)\n |    |    |-- touristy: boolean (nullable = true)\n |    |    |-- trendy: boolean (nullable = true)\n |    |    |-- upscale: boolean (nullable = true)\n |    |-- Attire: string (nullable = true)\n |    |-- BYOB: boolean (nullable = true)\n |    |-- BYOB/Corkage: string (nullable = true)\n |    |-- By Appointment Only: boolean (nullable = true)\n |    |-- Caters: boolean (nullable = true)\n |    |-- Coat Check: boolean (nullable = true)\n |    |-- Corkage: boolean (nullable = true)\n |    |-- Delivery: boolean (nullable = true)\n |    |-- Dietary Restrictions: struct (nullable = true)\n |    |    |-- dairy-free: boolean (nullable = true)\n |    |    |-- gluten-free: boolean (nullable = true)\n |    |    |-- halal: boolean (nullable = true)\n |    |    |-- kosher: boolean (nullable = true)\n |    |    |-- soy-free: boolean (nullable = true)\n |    |    |-- vegan: boolean (nullable = true)\n |    |    |-- vegetarian: boolean (nullable = true)\n |    |-- Dogs Allowed: boolean (nullable = true)\n |    |-- Drive-Thru: boolean (nullable = true)\n |    |-- Good For: struct (nullable = true)\n |    |    |-- breakfast: boolean (nullable = true)\n |    |    |-- brunch: boolean (nullable = true)\n |    |    |-- dessert: boolean (nullable = true)\n |    |    |-- dinner: boolean (nullable = true)\n |    |    |-- latenight: boolean (nullable = true)\n |    |    |-- lunch: boolean (nullable = true)\n |    |-- Good For Dancing: boolean (nullable = true)\n |    |-- Good For Groups: boolean (nullable = true)\n |    |-- Good for Kids: boolean (nullable = true)\n |    |-- Hair Types Specialized In: struct (nullable = true)\n |    |    |-- africanamerican: boolean (nullable = true)\n |    |    |-- asian: boolean (nullable = true)\n |    |    |-- coloring: boolean (nullable = true)\n |    |    |-- curly: boolean (nullable = true)\n |    |    |-- extensions: boolean (nullable = true)\n |    |    |-- kids: boolean (nullable = true)\n |    |    |-- perms: boolean (nullable = true)\n |    |    |-- straightperms: boolean (nullable = true)\n |    |-- Happy Hour: boolean (nullable = true)\n |    |-- Has TV: boolean (nullable = true)\n |    |-- Music: struct (nullable = true)\n |    |    |-- background_music: boolean (nullable = true)\n |    |    |-- dj: boolean (nullable = true)\n |    |    |-- jukebox: boolean (nullable = true)\n |    |    |-- karaoke: boolean (nullable = true)\n |    |    |-- live: boolean (nullable = true)\n |    |    |-- video: boolean (nullable = true)\n |    |-- Noise Level: string (nullable = true)\n |    |-- Open 24 Hours: boolean (nullable = true)\n |    |-- Order at Counter: boolean (nullable = true)\n |    |-- Outdoor Seating: boolean (nullable = true)\n |    |-- Parking: struct (nullable = true)\n |    |    |-- garage: boolean (nullable = true)\n |    |    |-- lot: boolean (nullable = true)\n |    |    |-- street: boolean (nullable = true)\n |    |    |-- valet: boolean (nullable = true)\n |    |    |-- validated: boolean (nullable = true)\n |    |-- Price Range: long (nullable = true)\n |    |-- Smoking: string (nullable = true)\n |    |-- Take-out: boolean (nullable = true)\n |    |-- Takes Reservations: boolean (nullable = true)\n |    |-- Waiter Service: boolean (nullable = true)\n |    |-- Wheelchair Accessible: boolean (nullable = true)\n |    |-- Wi-Fi: string (nullable = true)\n |-- business_id: string (nullable = true)\n |-- categories: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- city: string (nullable = true)\n |-- full_address: string (nullable = true)\n |-- hours: struct (nullable = true)\n |    |-- Friday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Monday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Saturday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Sunday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Thursday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Tuesday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Wednesday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |-- latitude: double (nullable = true)\n |-- longitude: double (nullable = true)\n |-- name: string (nullable = true)\n |-- neighborhoods: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- open: boolean (nullable = true)\n |-- review_count: long (nullable = true)\n |-- stars: double (nullable = true)\n |-- state: string (nullable = true)\n |-- type: string (nullable = true)\n\n\nreviews: org.apache.spark.sql.DataFrame = [business_id: string, date: string ... 6 more fields]\nroot\n |-- business_id: string (nullable = true)\n |-- date: string (nullable = true)\n |-- review_id: string (nullable = true)\n |-- stars: long (nullable = true)\n |-- text: string (nullable = true)\n |-- type: string (nullable = true)\n |-- user_id: string (nullable = true)\n |-- votes: struct (nullable = true)\n |    |-- cool: long (nullable = true)\n |    |-- funny: long (nullable = true)\n |    |-- useful: long (nullable = true)\n\n\nusers: org.apache.spark.sql.DataFrame = [average_stars: double, compliments: struct<cool: bigint, cute: bigint ... 9 more fields> ... 9 more fields]\nroot\n |-- average_stars: double (nullable = true)\n |-- compliments: struct (nullable = true)\n |    |-- cool: long (nullable = true)\n |    |-- cute: long (nullable = true)\n |    |-- funny: long (nullable = true)\n |    |-- hot: long (nullable = true)\n |    |-- list: long (nullable = true)\n |    |-- more: long (nullable = true)\n |    |-- note: long (nullable = true)\n |    |-- photos: long (nullable = true)\n |    |-- plain: long (nullable = true)\n |    |-- profile: long (nullable = true)\n |    |-- writer: long (nullable = true)\n |-- elite: array (nullable = true)\n |    |-- element: long (containsNull = true)\n |-- fans: long (nullable = true)\n |-- friends: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- name: string (nullable = true)\n |-- review_count: long (nullable = true)\n |-- type: string (nullable = true)\n |-- user_id: string (nullable = true)\n |-- votes: struct (nullable = true)\n |    |-- cool: long (nullable = true)\n |    |-- funny: long (nullable = true)\n |    |-- useful: long (nullable = true)\n |-- yelping_since: string (nullable = true)\n\n\ncheckins: org.apache.spark.sql.DataFrame = [business_id: string, checkin_info: struct<0-0: bigint, 0-1: bigint ... 166 more fields> ... 1 more field]\nroot\n |-- business_id: string (nullable = true)\n |-- checkin_info: struct (nullable = true)\n |    |-- 0-0: long (nullable = true)\n |    |-- 0-1: long (nullable = true)\n |    |-- 0-2: long (nullable = true)\n |    |-- 0-3: long (nullable = true)\n |    |-- 0-4: long (nullable = true)\n |    |-- 0-5: long (nullable = true)\n |    |-- 0-6: long (nullable = true)\n |    |-- 1-0: long (nullable = true)\n |    |-- 1-1: long (nullable = true)\n |    |-- 1-2: long (nullable = true)\n |    |-- 1-3: long (nullable = true)\n |    |-- 1-4: long (nullable = true)\n |    |-- 1-5: long (nullable = true)\n |    |-- 1-6: long (nullable = true)\n |    |-- 10-0: long (nullable = true)\n |    |-- 10-1: long (nullable = true)\n |    |-- 10-2: long (nullable = true)\n |    |-- 10-3: long (nullable = true)\n |    |-- 10-4: long (nullable = true)\n |    |-- 10-5: long (nullable = true)\n |    |-- 10-6: long (nullable = true)\n |    |-- 11-0: long (nullable = true)\n |    |-- 11-1: long (nullable = true)\n |    |-- 11-2: long (nullable = true)\n |    |-- 11-3: long (nullable = true)\n |    |-- 11-4: long (nullable = true)\n |    |-- 11-5: long (nullable = true)\n |    |-- 11-6: long (nullable = true)\n |    |-- 12-0: long (nullable = true)\n |    |-- 12-1: long (nullable = true)\n |    |-- 12-2: long (nullable = true)\n |    |-- 12-3: long (nullable = true)\n |    |-- 12-4: long (nullable = true)\n |    |-- 12-5: long (nullable = true)\n |    |-- 12-6: long (nullable = true)\n |    |-- 13-0: long (nullable = true)\n |    |-- 13-1: long (nullable = true)\n |    |-- 13-2: long (nullable = true)\n |    |-- 13-3: long (nullable = true)\n |    |-- 13-4: long (nullable = true)\n |    |-- 13-5: long (nullable = true)\n |    |-- 13-6: long (nullable = true)\n |    |-- 14-0: long (nullable = true)\n |    |-- 14-1: long (nullable = true)\n |    |-- 14-2: long (nullable = true)\n |    |-- 14-3: long (nullable = true)\n |    |-- 14-4: long (nullable = true)\n |    |-- 14-5: long (nullable = true)\n |    |-- 14-6: long (nullable = true)\n |    |-- 15-0: long (nullable = true)\n |    |-- 15-1: long (nullable = true)\n |    |-- 15-2: long (nullable = true)\n |    |-- 15-3: long (nullable = true)\n |    |-- 15-4: long (nullable = true)\n |    |-- 15-5: long (nullable = true)\n |    |-- 15-6: long (nullable = true)\n |    |-- 16-0: long (nullable = true)\n |    |-- 16-1: long (nullable = true)\n |    |-- 16-2: long (nullable = true)\n |    |-- 16-3: long (nullable = true)\n |    |-- 16-4: long (nullable = true)\n |    |-- 16-5: long (nullable = true)\n |    |-- 16-6: long (nullable = true)\n |    |-- 17-0: long (nullable = true)\n |    |-- 17-1: long (nullable = true)\n |    |-- 17-2: long (nullable = true)\n |    |-- 17-3: long (nullable = true)\n |    |-- 17-4: long (nullable = true)\n |    |-- 17-5: long (nullable = true)\n |    |-- 17-6: long (nullable = true)\n |    |-- 18-0: long (nullable = true)\n |    |-- 18-1: long (nullable = true)\n |    |-- 18-2: long (nullable = true)\n |    |-- 18-3: long (nullable = true)\n |    |-- 18-4: long (nullable = true)\n |    |-- 18-5: long (nullable = true)\n |    |-- 18-6: long (nullable = true)\n |    |-- 19-0: long (nullable = true)\n |    |-- 19-1: long (nullable = true)\n |    |-- 19-2: long (nullable = true)\n |    |-- 19-3: long (nullable = true)\n |    |-- 19-4: long (nullable = true)\n |    |-- 19-5: long (nullable = true)\n |    |-- 19-6: long (nullable = true)\n |    |-- 2-0: long (nullable = true)\n |    |-- 2-1: long (nullable = true)\n |    |-- 2-2: long (nullable = true)\n |    |-- 2-3: long (nullable = true)\n |    |-- 2-4: long (nullable = true)\n |    |-- 2-5: long (nullable = true)\n |    |-- 2-6: long (nullable = true)\n |    |-- 20-0: long (nullable = true)\n |    |-- 20-1: long (nullable = true)\n |    |-- 20-2: long (nullable = true)\n |    |-- 20-3: long (nullable = true)\n |    |-- 20-4: long (nullable = true)\n |    |-- 20-5: long (nullable = true)\n |    |-- 20-6: long (nullable = true)\n |    |-- 21-0: long (nullable = true)\n |    |-- 21-1: long (nullable = true)\n |    |-- 21-2: long (nullable = true)\n |    |-- 21-3: long (nullable = true)\n |    |-- 21-4: long (nullable = true)\n |    |-- 21-5: long (nullable = true)\n |    |-- 21-6: long (nullable = true)\n |    |-- 22-0: long (nullable = true)\n |    |-- 22-1: long (nullable = true)\n |    |-- 22-2: long (nullable = true)\n |    |-- 22-3: long (nullable = true)\n |    |-- 22-4: long (nullable = true)\n |    |-- 22-5: long (nullable = true)\n |    |-- 22-6: long (nullable = true)\n |    |-- 23-0: long (nullable = true)\n |    |-- 23-1: long (nullable = true)\n |    |-- 23-2: long (nullable = true)\n |    |-- 23-3: long (nullable = true)\n |    |-- 23-4: long (nullable = true)\n |    |-- 23-5: long (nullable = true)\n |    |-- 23-6: long (nullable = true)\n |    |-- 3-0: long (nullable = true)\n |    |-- 3-1: long (nullable = true)\n |    |-- 3-2: long (nullable = true)\n |    |-- 3-3: long (nullable = true)\n |    |-- 3-4: long (nullable = true)\n |    |-- 3-5: long (nullable = true)\n |    |-- 3-6: long (nullable = true)\n |    |-- 4-0: long (nullable = true)\n |    |-- 4-1: long (nullable = true)\n |    |-- 4-2: long (nullable = true)\n |    |-- 4-3: long (nullable = true)\n |    |-- 4-4: long (nullable = true)\n |    |-- 4-5: long (nullable = true)\n |    |-- 4-6: long (nullable = true)\n |    |-- 5-0: long (nullable = true)\n |    |-- 5-1: long (nullable = true)\n |    |-- 5-2: long (nullable = true)\n |    |-- 5-3: long (nullable = true)\n |    |-- 5-4: long (nullable = true)\n |    |-- 5-5: long (nullable = true)\n |    |-- 5-6: long (nullable = true)\n |    |-- 6-0: long (nullable = true)\n |    |-- 6-1: long (nullable = true)\n |    |-- 6-2: long (nullable = true)\n |    |-- 6-3: long (nullable = true)\n |    |-- 6-4: long (nullable = true)\n |    |-- 6-5: long (nullable = true)\n |    |-- 6-6: long (nullable = true)\n |    |-- 7-0: long (nullable = true)\n |    |-- 7-1: long (nullable = true)\n |    |-- 7-2: long (nullable = true)\n |    |-- 7-3: long (nullable = true)\n |    |-- 7-4: long (nullable = true)\n |    |-- 7-5: long (nullable = true)\n |    |-- 7-6: long (nullable = true)\n |    |-- 8-0: long (nullable = true)\n |    |-- 8-1: long (nullable = true)\n |    |-- 8-2: long (nullable = true)\n |    |-- 8-3: long (nullable = true)\n |    |-- 8-4: long (nullable = true)\n |    |-- 8-5: long (nullable = true)\n |    |-- 8-6: long (nullable = true)\n |    |-- 9-0: long (nullable = true)\n |    |-- 9-1: long (nullable = true)\n |    |-- 9-2: long (nullable = true)\n |    |-- 9-3: long (nullable = true)\n |    |-- 9-4: long (nullable = true)\n |    |-- 9-5: long (nullable = true)\n |    |-- 9-6: long (nullable = true)\n |-- type: string (nullable = true)\n\n\ntips: org.apache.spark.sql.DataFrame = [business_id: string, date: string ... 4 more fields]\nroot\n |-- business_id: string (nullable = true)\n |-- date: string (nullable = true)\n |-- likes: long (nullable = true)\n |-- text: string (nullable = true)\n |-- type: string (nullable = true)\n |-- user_id: string (nullable = true)\n\n"},"dateCreated":"2016-10-30T11:11:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:228","dateFinished":"2016-10-30T11:14:02+0000","dateStarted":"2016-10-30T11:12:49+0000"},{"title":"Top 25: coolest restaurants","text":"%sql\nSELECT r.business_id, name, SUM(votes.cool) AS coolness\nFROM review r JOIN business b\nON (r.business_id = b.business_id)\nGROUP BY r.business_id, name\nORDER BY coolness DESC\nLIMIT 25","dateUpdated":"2016-10-30T11:19:11+0000","config":{"lineNumbers":true,"tableHide":false,"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"title":true,"graph":{"mode":"table","height":161.3125,"optionOpen":false,"keys":[{"name":"business_id","index":0,"aggr":"sum"}],"values":[{"name":"name","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"business_id","index":0,"aggr":"sum"}},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"helium":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477825871029_-1328822436","id":"20161030-085623_1080741211","dateCreated":"2016-10-30T11:11:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:229","dateFinished":"2016-10-30T11:17:24+0000","dateStarted":"2016-10-30T11:16:40+0000","result":{"code":"SUCCESS","type":"TABLE","msg":"business_id\tname\tcoolness\nsIyHTizqAiGu12XMLX3N3g\tBacchanal Buffet\t3512\nzt1TpTuJ6y9n551sw9TaEg\tWicked Spoon\t3036\n2e2e7WgqU1BnpxmQL5jbfw\tEarl of Sandwich\t2854\nEs300Ys1XXPYg8aI7BKVYQ\tXS Nightclub\t2716\nAtjsjFzalWqJ7S9DUFQ4bw\tThe Cosmopolitan of Las Vegas\t2705\n4bEjOyTaDG24SY5TxsaUNQ\tMon Ami Gabi\t2572\neq6lQI039SBLC6sHm3idGA\tSecret Pizza\t2427\naGbjLWzcrnEx2ZmMCFm3EA\tGordon Ramsay BurGR\t2251\nYNQgak-ZLtYJQxlDwN-qIg\tThe Buffet\t2227\njf67Z1pnwElRSXllpQHiJg\tMcCarran International Airport\t2137\ntFU2Js_nbIZOrnKfYJYBBg\tBouchon at The Venetian\t2045\nsAOpm86A4ukUhY5men3Xbg\tGen Korean BBQ House\t1962\nr1YB-iVpNM8oP2eEqyaVbg\tEl Dorado Cantina\t1870\n34uJtlPnKicSaX1V8_tu1A\tThe Venetian Las Vegas\t1856\nPXviRcHR1mqdH4vRc2LEAQ\tBachi Burger\t1781\neWPFXL1Bmu1ImtIa2Rqliw\tMGM Grand Hotel\t1717\nVVeogjZya58oiTxK7qUjAQ\tPizzeria Bianco\t1709\nCZjcFdvJhksq9dy58NVEzw\tThe Buffet at Bellagio\t1689\nJpHE7yhMS5ehA9e8WG_ETg\tARIA Hotel & Casino\t1664\nHt8mXLuqJSTPrU9kvzosUA\tMarquee\t1663\nhW0Ne_HTHEAgGF1rAdmR-g\tPhoenix Sky Harbor International Airport - PHX\t1645\nlliksv-tglfUz1T3B3vgvA\tLotus of Siam\t1603\nQhwkFogGQA-Ar176Ul5PUQ\tShake Shack\t1579\n-7yF42k0CcJhtPw51oaOqQ\tBellagio Hotel\t1575\nXhg93cMdemu5pAMkDoEdtQ\tSerendipity 3\t1542\n","comment":"","msgTable":[[{"key":"name","value":"sIyHTizqAiGu12XMLX3N3g"},{"key":"name","value":"Bacchanal Buffet"},{"key":"name","value":3512}],[{"key":"coolness","value":"zt1TpTuJ6y9n551sw9TaEg"},{"key":"coolness","value":"Wicked Spoon"},{"key":"coolness","value":3036}],[{"value":"2e2e7WgqU1BnpxmQL5jbfw"},{"value":"Earl of Sandwich"},{"value":2854}],[{"value":"Es300Ys1XXPYg8aI7BKVYQ"},{"value":"XS Nightclub"},{"value":2716}],[{"value":"AtjsjFzalWqJ7S9DUFQ4bw"},{"value":"The Cosmopolitan of Las Vegas"},{"value":2705}],[{"value":"4bEjOyTaDG24SY5TxsaUNQ"},{"value":"Mon Ami Gabi"},{"value":2572}],[{"value":"eq6lQI039SBLC6sHm3idGA"},{"value":"Secret Pizza"},{"value":2427}],[{"value":"aGbjLWzcrnEx2ZmMCFm3EA"},{"value":"Gordon Ramsay BurGR"},{"value":2251}],[{"value":"YNQgak-ZLtYJQxlDwN-qIg"},{"value":"The Buffet"},{"value":2227}],[{"value":"jf67Z1pnwElRSXllpQHiJg"},{"value":"McCarran International Airport"},{"value":2137}],[{"value":"tFU2Js_nbIZOrnKfYJYBBg"},{"value":"Bouchon at The Venetian"},{"value":2045}],[{"value":"sAOpm86A4ukUhY5men3Xbg"},{"value":"Gen Korean BBQ House"},{"value":1962}],[{"value":"r1YB-iVpNM8oP2eEqyaVbg"},{"value":"El Dorado Cantina"},{"value":1870}],[{"value":"34uJtlPnKicSaX1V8_tu1A"},{"value":"The Venetian Las Vegas"},{"value":1856}],[{"value":"PXviRcHR1mqdH4vRc2LEAQ"},{"value":"Bachi Burger"},{"value":1781}],[{"value":"eWPFXL1Bmu1ImtIa2Rqliw"},{"value":"MGM Grand Hotel"},{"value":1717}],[{"value":"VVeogjZya58oiTxK7qUjAQ"},{"value":"Pizzeria Bianco"},{"value":1709}],[{"value":"CZjcFdvJhksq9dy58NVEzw"},{"value":"The Buffet at Bellagio"},{"value":1689}],[{"value":"JpHE7yhMS5ehA9e8WG_ETg"},{"value":"ARIA Hotel & Casino"},{"value":1664}],[{"value":"Ht8mXLuqJSTPrU9kvzosUA"},{"value":"Marquee"},{"value":1663}],[{"value":"hW0Ne_HTHEAgGF1rAdmR-g"},{"value":"Phoenix Sky Harbor International Airport - PHX"},{"value":1645}],[{"value":"lliksv-tglfUz1T3B3vgvA"},{"value":"Lotus of Siam"},{"value":1603}],[{"value":"QhwkFogGQA-Ar176Ul5PUQ"},{"value":"Shake Shack"},{"value":1579}],[{"value":"-7yF42k0CcJhtPw51oaOqQ"},{"value":"Bellagio Hotel"},{"value":1575}],[{"value":"Xhg93cMdemu5pAMkDoEdtQ"},{"value":"2001-02-28T23:00:00.000Z"},{"value":1542}]],"columnNames":[{"name":"business_id","index":0,"aggr":"sum"},{"name":"name","index":1,"aggr":"sum"},{"name":"coolness","index":2,"aggr":"sum"}],"rows":[["sIyHTizqAiGu12XMLX3N3g","Bacchanal Buffet",3512],["zt1TpTuJ6y9n551sw9TaEg","Wicked Spoon",3036],["2e2e7WgqU1BnpxmQL5jbfw","Earl of Sandwich",2854],["Es300Ys1XXPYg8aI7BKVYQ","XS Nightclub",2716],["AtjsjFzalWqJ7S9DUFQ4bw","The Cosmopolitan of Las Vegas",2705],["4bEjOyTaDG24SY5TxsaUNQ","Mon Ami Gabi",2572],["eq6lQI039SBLC6sHm3idGA","Secret Pizza",2427],["aGbjLWzcrnEx2ZmMCFm3EA","Gordon Ramsay BurGR",2251],["YNQgak-ZLtYJQxlDwN-qIg","The Buffet",2227],["jf67Z1pnwElRSXllpQHiJg","McCarran International Airport",2137],["tFU2Js_nbIZOrnKfYJYBBg","Bouchon at The Venetian",2045],["sAOpm86A4ukUhY5men3Xbg","Gen Korean BBQ House",1962],["r1YB-iVpNM8oP2eEqyaVbg","El Dorado Cantina",1870],["34uJtlPnKicSaX1V8_tu1A","The Venetian Las Vegas",1856],["PXviRcHR1mqdH4vRc2LEAQ","Bachi Burger",1781],["eWPFXL1Bmu1ImtIa2Rqliw","MGM Grand Hotel",1717],["VVeogjZya58oiTxK7qUjAQ","Pizzeria Bianco",1709],["CZjcFdvJhksq9dy58NVEzw","The Buffet at Bellagio",1689],["JpHE7yhMS5ehA9e8WG_ETg","ARIA Hotel & Casino",1664],["Ht8mXLuqJSTPrU9kvzosUA","Marquee",1663],["hW0Ne_HTHEAgGF1rAdmR-g","Phoenix Sky Harbor International Airport - PHX",1645],["lliksv-tglfUz1T3B3vgvA","Lotus of Siam",1603],["QhwkFogGQA-Ar176Ul5PUQ","Shake Shack",1579],["-7yF42k0CcJhtPw51oaOqQ","Bellagio Hotel",1575],["Xhg93cMdemu5pAMkDoEdtQ","2001-02-28T23:00:00.000Z",1542]]},"focus":true},{"text":"%sql\nSELECT name, review_count\nFROM business\nORDER BY review_count DESC\nLIMIT 25","dateUpdated":"2016-10-30T11:19:50+0000","config":{"colWidth":6,"editorMode":"ace/mode/sql","helium":{},"graph":{"mode":"table","height":215.98959350585938,"optionOpen":false,"keys":[{"name":"name","index":0,"aggr":"sum"}],"values":[{"name":"review_count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"name","index":0,"aggr":"sum"},"yAxis":{"name":"review_count","index":1,"aggr":"sum"}},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477825871037_-1331900427","id":"20161030-091322_58220311","result":{"code":"SUCCESS","type":"TABLE","msg":"name\treview_count\nMon Ami Gabi\t6200\nBacchanal Buffet\t5216\nWicked Spoon\t4967\nEarl of Sandwich\t4687\nGordon Ramsay BurGR\t4620\nSerendipity 3\t3781\nGangnam Asian BBQ Dining\t3767\nHash House A Go Go\t3577\nThe Buffet\t3546\nThe Buffet at Bellagio\t3305\nThe Cosmopolitan of Las Vegas\t3228\nLotus of Siam\t3225\nARIA Hotel & Casino\t3181\nBouchon at The Venetian\t3134\nSecret Pizza\t3086\nLuxor Hotel And Casino Las Vegas\t2934\nHash House A Go Go\t2857\nXS Nightclub\t2794\nMGM Grand Hotel\t2793\nMcCarran International Airport\t2736\nMesa Grill\t2643\nThe Venetian Las Vegas\t2632\nBachi Burger\t2622\nGordon Ramsay Steak\t2441\nHolsteins Shakes and Buns\t2362\n","comment":"","msgTable":[[{"key":"review_count","value":"Mon Ami Gabi"},{"key":"review_count","value":6200}],[{"value":"Bacchanal Buffet"},{"value":5216}],[{"value":"Wicked Spoon"},{"value":4967}],[{"value":"Earl of Sandwich"},{"value":4687}],[{"value":"Gordon Ramsay BurGR"},{"value":4620}],[{"value":"2001-02-28T23:00:00.000Z"},{"value":3781}],[{"value":"Gangnam Asian BBQ Dining"},{"value":3767}],[{"value":"Hash House A Go Go"},{"value":3577}],[{"value":"The Buffet"},{"value":3546}],[{"value":"The Buffet at Bellagio"},{"value":3305}],[{"value":"The Cosmopolitan of Las Vegas"},{"value":3228}],[{"value":"Lotus of Siam"},{"value":3225}],[{"value":"ARIA Hotel & Casino"},{"value":3181}],[{"value":"Bouchon at The Venetian"},{"value":3134}],[{"value":"Secret Pizza"},{"value":3086}],[{"value":"Luxor Hotel And Casino Las Vegas"},{"value":2934}],[{"value":"Hash House A Go Go"},{"value":2857}],[{"value":"XS Nightclub"},{"value":2794}],[{"value":"MGM Grand Hotel"},{"value":2793}],[{"value":"McCarran International Airport"},{"value":2736}],[{"value":"Mesa Grill"},{"value":2643}],[{"value":"The Venetian Las Vegas"},{"value":2632}],[{"value":"Bachi Burger"},{"value":2622}],[{"value":"Gordon Ramsay Steak"},{"value":2441}],[{"value":"Holsteins Shakes and Buns"},{"value":2362}]],"columnNames":[{"name":"name","index":0,"aggr":"sum"},{"name":"review_count","index":1,"aggr":"sum"}],"rows":[["Mon Ami Gabi",6200],["Bacchanal Buffet",5216],["Wicked Spoon",4967],["Earl of Sandwich",4687],["Gordon Ramsay BurGR",4620],["2001-02-28T23:00:00.000Z",3781],["Gangnam Asian BBQ Dining",3767],["Hash House A Go Go",3577],["The Buffet",3546],["The Buffet at Bellagio",3305],["The Cosmopolitan of Las Vegas",3228],["Lotus of Siam",3225],["ARIA Hotel & Casino",3181],["Bouchon at The Venetian",3134],["Secret Pizza",3086],["Luxor Hotel And Casino Las Vegas",2934],["Hash House A Go Go",2857],["XS Nightclub",2794],["MGM Grand Hotel",2793],["McCarran International Airport",2736],["Mesa Grill",2643],["The Venetian Las Vegas",2632],["Bachi Burger",2622],["Gordon Ramsay Steak",2441],["Holsteins Shakes and Buns",2362]]},"dateCreated":"2016-10-30T11:11:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:230","dateFinished":"2016-10-30T11:19:25+0000","dateStarted":"2016-10-30T11:19:24+0000","title":"Top 25: business with most of the reviews","focus":true},{"title":"Users","text":"%sql\nselect * from users limit 2","dateUpdated":"2016-10-30T11:11:11+0000","config":{"colWidth":6,"title":true,"graph":{"mode":"table","height":86.65625,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477825871037_-1331900427","id":"20161030-085655_952301106","dateCreated":"2016-10-30T11:11:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:231"},{"title":"Reviews","text":"%sql\n","dateUpdated":"2016-10-30T11:11:11+0000","config":{"colWidth":6,"title":true,"graph":{"mode":"table","height":86.65625,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477825871038_-1330746181","id":"20161030-085959_1389937024","dateCreated":"2016-10-30T11:11:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:232"}],"name":"Yelp-Dataset-Challenge","id":"2BZZF4RZ1","angularObjects":{"2C1QKWNYV:shared_process":[],"2BZK6ZEC5:shared_process":[],"2C1S9KHNH:shared_process":[],"2C1VU1NKA:shared_process":[],"2C18E8XMD:shared_process":[],"2BYNZTJZM:shared_process":[],"2BZ95M9B7:shared_process":[],"2BYXH3588:shared_process":[],"2C2PEEGRD:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}