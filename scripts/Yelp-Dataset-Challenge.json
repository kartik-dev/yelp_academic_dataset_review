{"paragraphs":[{"text":"import org.apache.spark.sql.SparkSession\r\n\r\nval warehouseLocation = \"hdfs://192.168.0.50:8020/spark-warehouse\"\r\n\r\nval spark = SparkSession\r\n  .builder()\r\n  .appName(\"Yelp academic dataset example\")\r\n  .config(\"spark.cassandra.connection.host\", \"192.168.0.50\")\r\n  .config(\"spark.sql.warehouse.dir\", warehouseLocation)\r\n  .getOrCreate()\r\n\r\nspark.sparkContext.setLogLevel(\"ERROR\")\r\n\r\n// Business Data frame\r\nval business = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_business.json\")\r\nbusiness.printSchema\r\n\r\n// Reviews Data frame\r\nval reviews = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_review.json\")\r\nreviews.printSchema\r\n\r\n// Users Data frame\r\nval users = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_user.json\")\r\nusers.printSchema\r\n\r\n// Checkins Data frame\r\nval checkins = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_checkin.json\")\r\ncheckins.printSchema\r\n\r\n// Tips Data frame\r\nval tips = spark.read.json(\"hdfs://192.168.0.50:8020/yelp-dataset/yelp_academic_dataset_tip.json\")\r\ntips.printSchema\r\n\r\nbusiness.createOrReplaceTempView(\"business\")\r\nusers.createOrReplaceTempView(\"users\")\r\n","dateUpdated":"2016-10-30T09:11:35+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477817524543_1940009455","id":"20161030-085204_519339225","dateCreated":"2016-10-30T08:52:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1397","dateFinished":"2016-10-30T09:12:12+0000","dateStarted":"2016-10-30T09:11:35+0000","title":"Load business JSON and register as temporary view","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.sql.SparkSession\n\nwarehouseLocation: String = hdfs://192.168.0.50:8020/spark-warehouse\n\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@776cae27\n\nbusiness: org.apache.spark.sql.DataFrame = [attributes: struct<Accepts Credit Cards: boolean, Accepts Insurance: boolean ... 34 more fields>, business_id: string ... 13 more fields]\nroot\n |-- attributes: struct (nullable = true)\n |    |-- Accepts Credit Cards: boolean (nullable = true)\n |    |-- Accepts Insurance: boolean (nullable = true)\n |    |-- Ages Allowed: string (nullable = true)\n |    |-- Alcohol: string (nullable = true)\n |    |-- Ambience: struct (nullable = true)\n |    |    |-- casual: boolean (nullable = true)\n |    |    |-- classy: boolean (nullable = true)\n |    |    |-- divey: boolean (nullable = true)\n |    |    |-- hipster: boolean (nullable = true)\n |    |    |-- intimate: boolean (nullable = true)\n |    |    |-- romantic: boolean (nullable = true)\n |    |    |-- touristy: boolean (nullable = true)\n |    |    |-- trendy: boolean (nullable = true)\n |    |    |-- upscale: boolean (nullable = true)\n |    |-- Attire: string (nullable = true)\n |    |-- BYOB: boolean (nullable = true)\n |    |-- BYOB/Corkage: string (nullable = true)\n |    |-- By Appointment Only: boolean (nullable = true)\n |    |-- Caters: boolean (nullable = true)\n |    |-- Coat Check: boolean (nullable = true)\n |    |-- Corkage: boolean (nullable = true)\n |    |-- Delivery: boolean (nullable = true)\n |    |-- Dietary Restrictions: struct (nullable = true)\n |    |    |-- dairy-free: boolean (nullable = true)\n |    |    |-- gluten-free: boolean (nullable = true)\n |    |    |-- halal: boolean (nullable = true)\n |    |    |-- kosher: boolean (nullable = true)\n |    |    |-- soy-free: boolean (nullable = true)\n |    |    |-- vegan: boolean (nullable = true)\n |    |    |-- vegetarian: boolean (nullable = true)\n |    |-- Dogs Allowed: boolean (nullable = true)\n |    |-- Drive-Thru: boolean (nullable = true)\n |    |-- Good For: struct (nullable = true)\n |    |    |-- breakfast: boolean (nullable = true)\n |    |    |-- brunch: boolean (nullable = true)\n |    |    |-- dessert: boolean (nullable = true)\n |    |    |-- dinner: boolean (nullable = true)\n |    |    |-- latenight: boolean (nullable = true)\n |    |    |-- lunch: boolean (nullable = true)\n |    |-- Good For Dancing: boolean (nullable = true)\n |    |-- Good For Groups: boolean (nullable = true)\n |    |-- Good for Kids: boolean (nullable = true)\n |    |-- Hair Types Specialized In: struct (nullable = true)\n |    |    |-- africanamerican: boolean (nullable = true)\n |    |    |-- asian: boolean (nullable = true)\n |    |    |-- coloring: boolean (nullable = true)\n |    |    |-- curly: boolean (nullable = true)\n |    |    |-- extensions: boolean (nullable = true)\n |    |    |-- kids: boolean (nullable = true)\n |    |    |-- perms: boolean (nullable = true)\n |    |    |-- straightperms: boolean (nullable = true)\n |    |-- Happy Hour: boolean (nullable = true)\n |    |-- Has TV: boolean (nullable = true)\n |    |-- Music: struct (nullable = true)\n |    |    |-- background_music: boolean (nullable = true)\n |    |    |-- dj: boolean (nullable = true)\n |    |    |-- jukebox: boolean (nullable = true)\n |    |    |-- karaoke: boolean (nullable = true)\n |    |    |-- live: boolean (nullable = true)\n |    |    |-- video: boolean (nullable = true)\n |    |-- Noise Level: string (nullable = true)\n |    |-- Open 24 Hours: boolean (nullable = true)\n |    |-- Order at Counter: boolean (nullable = true)\n |    |-- Outdoor Seating: boolean (nullable = true)\n |    |-- Parking: struct (nullable = true)\n |    |    |-- garage: boolean (nullable = true)\n |    |    |-- lot: boolean (nullable = true)\n |    |    |-- street: boolean (nullable = true)\n |    |    |-- valet: boolean (nullable = true)\n |    |    |-- validated: boolean (nullable = true)\n |    |-- Price Range: long (nullable = true)\n |    |-- Smoking: string (nullable = true)\n |    |-- Take-out: boolean (nullable = true)\n |    |-- Takes Reservations: boolean (nullable = true)\n |    |-- Waiter Service: boolean (nullable = true)\n |    |-- Wheelchair Accessible: boolean (nullable = true)\n |    |-- Wi-Fi: string (nullable = true)\n |-- business_id: string (nullable = true)\n |-- categories: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- city: string (nullable = true)\n |-- full_address: string (nullable = true)\n |-- hours: struct (nullable = true)\n |    |-- Friday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Monday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Saturday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Sunday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Thursday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Tuesday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |    |-- Wednesday: struct (nullable = true)\n |    |    |-- close: string (nullable = true)\n |    |    |-- open: string (nullable = true)\n |-- latitude: double (nullable = true)\n |-- longitude: double (nullable = true)\n |-- name: string (nullable = true)\n |-- neighborhoods: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- open: boolean (nullable = true)\n |-- review_count: long (nullable = true)\n |-- stars: double (nullable = true)\n |-- state: string (nullable = true)\n |-- type: string (nullable = true)\n\n\nreviews: org.apache.spark.sql.DataFrame = [business_id: string, date: string ... 6 more fields]\nroot\n |-- business_id: string (nullable = true)\n |-- date: string (nullable = true)\n |-- review_id: string (nullable = true)\n |-- stars: long (nullable = true)\n |-- text: string (nullable = true)\n |-- type: string (nullable = true)\n |-- user_id: string (nullable = true)\n |-- votes: struct (nullable = true)\n |    |-- cool: long (nullable = true)\n |    |-- funny: long (nullable = true)\n |    |-- useful: long (nullable = true)\n\n\nusers: org.apache.spark.sql.DataFrame = [average_stars: double, compliments: struct<cool: bigint, cute: bigint ... 9 more fields> ... 9 more fields]\nroot\n |-- average_stars: double (nullable = true)\n |-- compliments: struct (nullable = true)\n |    |-- cool: long (nullable = true)\n |    |-- cute: long (nullable = true)\n |    |-- funny: long (nullable = true)\n |    |-- hot: long (nullable = true)\n |    |-- list: long (nullable = true)\n |    |-- more: long (nullable = true)\n |    |-- note: long (nullable = true)\n |    |-- photos: long (nullable = true)\n |    |-- plain: long (nullable = true)\n |    |-- profile: long (nullable = true)\n |    |-- writer: long (nullable = true)\n |-- elite: array (nullable = true)\n |    |-- element: long (containsNull = true)\n |-- fans: long (nullable = true)\n |-- friends: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- name: string (nullable = true)\n |-- review_count: long (nullable = true)\n |-- type: string (nullable = true)\n |-- user_id: string (nullable = true)\n |-- votes: struct (nullable = true)\n |    |-- cool: long (nullable = true)\n |    |-- funny: long (nullable = true)\n |    |-- useful: long (nullable = true)\n |-- yelping_since: string (nullable = true)\n\n\ncheckins: org.apache.spark.sql.DataFrame = [business_id: string, checkin_info: struct<0-0: bigint, 0-1: bigint ... 166 more fields> ... 1 more field]\nroot\n |-- business_id: string (nullable = true)\n |-- checkin_info: struct (nullable = true)\n |    |-- 0-0: long (nullable = true)\n |    |-- 0-1: long (nullable = true)\n |    |-- 0-2: long (nullable = true)\n |    |-- 0-3: long (nullable = true)\n |    |-- 0-4: long (nullable = true)\n |    |-- 0-5: long (nullable = true)\n |    |-- 0-6: long (nullable = true)\n |    |-- 1-0: long (nullable = true)\n |    |-- 1-1: long (nullable = true)\n |    |-- 1-2: long (nullable = true)\n |    |-- 1-3: long (nullable = true)\n |    |-- 1-4: long (nullable = true)\n |    |-- 1-5: long (nullable = true)\n |    |-- 1-6: long (nullable = true)\n |    |-- 10-0: long (nullable = true)\n |    |-- 10-1: long (nullable = true)\n |    |-- 10-2: long (nullable = true)\n |    |-- 10-3: long (nullable = true)\n |    |-- 10-4: long (nullable = true)\n |    |-- 10-5: long (nullable = true)\n |    |-- 10-6: long (nullable = true)\n |    |-- 11-0: long (nullable = true)\n |    |-- 11-1: long (nullable = true)\n |    |-- 11-2: long (nullable = true)\n |    |-- 11-3: long (nullable = true)\n |    |-- 11-4: long (nullable = true)\n |    |-- 11-5: long (nullable = true)\n |    |-- 11-6: long (nullable = true)\n |    |-- 12-0: long (nullable = true)\n |    |-- 12-1: long (nullable = true)\n |    |-- 12-2: long (nullable = true)\n |    |-- 12-3: long (nullable = true)\n |    |-- 12-4: long (nullable = true)\n |    |-- 12-5: long (nullable = true)\n |    |-- 12-6: long (nullable = true)\n |    |-- 13-0: long (nullable = true)\n |    |-- 13-1: long (nullable = true)\n |    |-- 13-2: long (nullable = true)\n |    |-- 13-3: long (nullable = true)\n |    |-- 13-4: long (nullable = true)\n |    |-- 13-5: long (nullable = true)\n |    |-- 13-6: long (nullable = true)\n |    |-- 14-0: long (nullable = true)\n |    |-- 14-1: long (nullable = true)\n |    |-- 14-2: long (nullable = true)\n |    |-- 14-3: long (nullable = true)\n |    |-- 14-4: long (nullable = true)\n |    |-- 14-5: long (nullable = true)\n |    |-- 14-6: long (nullable = true)\n |    |-- 15-0: long (nullable = true)\n |    |-- 15-1: long (nullable = true)\n |    |-- 15-2: long (nullable = true)\n |    |-- 15-3: long (nullable = true)\n |    |-- 15-4: long (nullable = true)\n |    |-- 15-5: long (nullable = true)\n |    |-- 15-6: long (nullable = true)\n |    |-- 16-0: long (nullable = true)\n |    |-- 16-1: long (nullable = true)\n |    |-- 16-2: long (nullable = true)\n |    |-- 16-3: long (nullable = true)\n |    |-- 16-4: long (nullable = true)\n |    |-- 16-5: long (nullable = true)\n |    |-- 16-6: long (nullable = true)\n |    |-- 17-0: long (nullable = true)\n |    |-- 17-1: long (nullable = true)\n |    |-- 17-2: long (nullable = true)\n |    |-- 17-3: long (nullable = true)\n |    |-- 17-4: long (nullable = true)\n |    |-- 17-5: long (nullable = true)\n |    |-- 17-6: long (nullable = true)\n |    |-- 18-0: long (nullable = true)\n |    |-- 18-1: long (nullable = true)\n |    |-- 18-2: long (nullable = true)\n |    |-- 18-3: long (nullable = true)\n |    |-- 18-4: long (nullable = true)\n |    |-- 18-5: long (nullable = true)\n |    |-- 18-6: long (nullable = true)\n |    |-- 19-0: long (nullable = true)\n |    |-- 19-1: long (nullable = true)\n |    |-- 19-2: long (nullable = true)\n |    |-- 19-3: long (nullable = true)\n |    |-- 19-4: long (nullable = true)\n |    |-- 19-5: long (nullable = true)\n |    |-- 19-6: long (nullable = true)\n |    |-- 2-0: long (nullable = true)\n |    |-- 2-1: long (nullable = true)\n |    |-- 2-2: long (nullable = true)\n |    |-- 2-3: long (nullable = true)\n |    |-- 2-4: long (nullable = true)\n |    |-- 2-5: long (nullable = true)\n |    |-- 2-6: long (nullable = true)\n |    |-- 20-0: long (nullable = true)\n |    |-- 20-1: long (nullable = true)\n |    |-- 20-2: long (nullable = true)\n |    |-- 20-3: long (nullable = true)\n |    |-- 20-4: long (nullable = true)\n |    |-- 20-5: long (nullable = true)\n |    |-- 20-6: long (nullable = true)\n |    |-- 21-0: long (nullable = true)\n |    |-- 21-1: long (nullable = true)\n |    |-- 21-2: long (nullable = true)\n |    |-- 21-3: long (nullable = true)\n |    |-- 21-4: long (nullable = true)\n |    |-- 21-5: long (nullable = true)\n |    |-- 21-6: long (nullable = true)\n |    |-- 22-0: long (nullable = true)\n |    |-- 22-1: long (nullable = true)\n |    |-- 22-2: long (nullable = true)\n |    |-- 22-3: long (nullable = true)\n |    |-- 22-4: long (nullable = true)\n |    |-- 22-5: long (nullable = true)\n |    |-- 22-6: long (nullable = true)\n |    |-- 23-0: long (nullable = true)\n |    |-- 23-1: long (nullable = true)\n |    |-- 23-2: long (nullable = true)\n |    |-- 23-3: long (nullable = true)\n |    |-- 23-4: long (nullable = true)\n |    |-- 23-5: long (nullable = true)\n |    |-- 23-6: long (nullable = true)\n |    |-- 3-0: long (nullable = true)\n |    |-- 3-1: long (nullable = true)\n |    |-- 3-2: long (nullable = true)\n |    |-- 3-3: long (nullable = true)\n |    |-- 3-4: long (nullable = true)\n |    |-- 3-5: long (nullable = true)\n |    |-- 3-6: long (nullable = true)\n |    |-- 4-0: long (nullable = true)\n |    |-- 4-1: long (nullable = true)\n |    |-- 4-2: long (nullable = true)\n |    |-- 4-3: long (nullable = true)\n |    |-- 4-4: long (nullable = true)\n |    |-- 4-5: long (nullable = true)\n |    |-- 4-6: long (nullable = true)\n |    |-- 5-0: long (nullable = true)\n |    |-- 5-1: long (nullable = true)\n |    |-- 5-2: long (nullable = true)\n |    |-- 5-3: long (nullable = true)\n |    |-- 5-4: long (nullable = true)\n |    |-- 5-5: long (nullable = true)\n |    |-- 5-6: long (nullable = true)\n |    |-- 6-0: long (nullable = true)\n |    |-- 6-1: long (nullable = true)\n |    |-- 6-2: long (nullable = true)\n |    |-- 6-3: long (nullable = true)\n |    |-- 6-4: long (nullable = true)\n |    |-- 6-5: long (nullable = true)\n |    |-- 6-6: long (nullable = true)\n |    |-- 7-0: long (nullable = true)\n |    |-- 7-1: long (nullable = true)\n |    |-- 7-2: long (nullable = true)\n |    |-- 7-3: long (nullable = true)\n |    |-- 7-4: long (nullable = true)\n |    |-- 7-5: long (nullable = true)\n |    |-- 7-6: long (nullable = true)\n |    |-- 8-0: long (nullable = true)\n |    |-- 8-1: long (nullable = true)\n |    |-- 8-2: long (nullable = true)\n |    |-- 8-3: long (nullable = true)\n |    |-- 8-4: long (nullable = true)\n |    |-- 8-5: long (nullable = true)\n |    |-- 8-6: long (nullable = true)\n |    |-- 9-0: long (nullable = true)\n |    |-- 9-1: long (nullable = true)\n |    |-- 9-2: long (nullable = true)\n |    |-- 9-3: long (nullable = true)\n |    |-- 9-4: long (nullable = true)\n |    |-- 9-5: long (nullable = true)\n |    |-- 9-6: long (nullable = true)\n |-- type: string (nullable = true)\n\n\ntips: org.apache.spark.sql.DataFrame = [business_id: string, date: string ... 4 more fields]\nroot\n |-- business_id: string (nullable = true)\n |-- date: string (nullable = true)\n |-- likes: long (nullable = true)\n |-- text: string (nullable = true)\n |-- type: string (nullable = true)\n |-- user_id: string (nullable = true)\n\n"}},{"text":"%sql\nselect business_id,categories,attributes,city,full_address from business limit 1","dateUpdated":"2016-10-30T09:14:25+0000","config":{"colWidth":6,"graph":{"mode":"table","height":86.65625,"optionOpen":false,"keys":[{"name":"business_id","index":0,"aggr":"sum"}],"values":[{"name":"categories","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"business_id","index":0,"aggr":"sum"},"yAxis":{"name":"categories","index":1,"aggr":"sum"}},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/sql","title":true,"editorHide":false,"tableHide":false,"lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477817783704_-33800019","id":"20161030-085623_1080741211","dateCreated":"2016-10-30T08:56:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1678","dateFinished":"2016-10-30T08:57:37+0000","dateStarted":"2016-10-30T08:57:36+0000","errorMessage":"","title":"Business"},{"text":"%sql\nselect business_id,categories,attributes,city,full_address from business limit 1\n","dateUpdated":"2016-10-30T09:14:41+0000","config":{"colWidth":6,"graph":{"mode":"pieChart","height":86.65625,"optionOpen":false,"keys":[{"name":"business_id","index":0,"aggr":"sum"}],"values":[{"name":"categories","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"business_id","index":0,"aggr":"sum"},"yAxis":{"name":"categories","index":1,"aggr":"sum"}},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/sql","helium":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477818802184_-792456976","id":"20161030-091322_58220311","dateCreated":"2016-10-30T09:13:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2329","dateFinished":"2016-10-30T09:14:36+0000","dateStarted":"2016-10-30T09:14:35+0000","result":{"code":"SUCCESS","type":"TABLE","msg":"business_id\tcategories\tattributes\tcity\tfull_address\n5UmKMjUEUNdYWqANhGckJw\tWrappedArray(Fast Food, Restaurants)\t[true,null,null,none,[false,false,false,false,false,false,false,false,false],casual,null,null,null,false,null,null,false,null,null,false,[false,false,false,false,false,false],null,true,true,null,null,false,null,average,null,null,false,[false,false,false,false,false],1,null,true,false,false,null,null]\tDravosburg\t4734 Lebanon Church Rd\nDravosburg, PA 15034\n","comment":"","msgTable":[[{"key":"categories","value":"5UmKMjUEUNdYWqANhGckJw"},{"key":"categories","value":"WrappedArray(Fast Food, Restaurants)"},{"key":"categories","value":"[true,null,null,none,[false,false,false,false,false,false,false,false,false],casual,null,null,null,false,null,null,false,null,null,false,[false,false,false,false,false,false],null,true,true,null,null,false,null,average,null,null,false,[false,false,false,false,false],1,null,true,false,false,null,null]"},{"key":"categories","value":"Dravosburg"},{"key":"categories","value":"4734 Lebanon Church Rd"}],[{"key":"attributes","value":"+015033-12-31T23:00:00.000Z"}]],"columnNames":[{"name":"business_id","index":0,"aggr":"sum"},{"name":"categories","index":1,"aggr":"sum"},{"name":"attributes","index":2,"aggr":"sum"},{"name":"city","index":3,"aggr":"sum"},{"name":"full_address","index":4,"aggr":"sum"}],"rows":[["5UmKMjUEUNdYWqANhGckJw","WrappedArray(Fast Food, Restaurants)","[true,null,null,none,[false,false,false,false,false,false,false,false,false],casual,null,null,null,false,null,null,false,null,null,false,[false,false,false,false,false,false],null,true,true,null,null,false,null,average,null,null,false,[false,false,false,false,false],1,null,true,false,false,null,null]","Dravosburg","4734 Lebanon Church Rd"],["+015033-12-31T23:00:00.000Z"]]}},{"text":"%sql\nselect * from users limit 2","dateUpdated":"2016-10-30T09:14:59+0000","config":{"colWidth":6,"graph":{"mode":"table","height":86.65625,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477817815583_-818056195","id":"20161030-085655_952301106","dateCreated":"2016-10-30T08:56:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1749","dateFinished":"2016-10-30T08:59:59+0000","dateStarted":"2016-10-30T08:59:59+0000","errorMessage":"","title":"Users"},{"text":"%sql\n","dateUpdated":"2016-10-30T09:15:07+0000","config":{"colWidth":6,"graph":{"mode":"table","height":86.65625,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1477817999241_-370351850","id":"20161030-085959_1389937024","dateCreated":"2016-10-30T08:59:59+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1953","title":"Reviews"}],"name":"Yelp-Dataset-Challenge","id":"2BZV6P98U","angularObjects":{"2BZ3RZUGW:shared_process":[],"2C19BQD4Q:shared_process":[],"2BYP4N8TC:shared_process":[],"2C2RE19VB:shared_process":[],"2C11NAH91:shared_process":[],"2C1M8AHPN:shared_process":[],"2C2SR5JWR:shared_process":[],"2C1GQQSK8:shared_process":[],"2C1Z83XST:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}